services:

  mariadb:
    image: "${APP_DATABASE_IMAGE}"
    container_name: "${APP_NAME}-mariadb"
    restart: unless-stopped
    env_file: .env
    # Open port only for the host. Need for SSH tunnel to connect to database from SQL Manager like HeidiSQL
    # Uncomment ports directive for using SSH tunnel, and uncomment SSH_TUNNEL_EXT_PORT var in .env file
    ports:
      - 127.0.0.1:${SSH_TUNNEL_EXT_PORT}:3306
    # Uncomment this to reset root password and run inside container mariadb> FLUSH PRIVILEGES; ALTER USER 'root'@'%' IDENTIFIED BY 'new_password';
    #command: --skip-grant-tables
    volumes:
      - ./db-data:/var/lib/mysql

  php:
    image: "${APP_PHP_IMAGE}"
    container_name: "${APP_NAME}-php"
    restart: unless-stopped
    depends_on:
      - mariadb
    working_dir: /srv/web
    env_file: .env
    environment:
      CURRENT_UID: ${CURRENT_UID:-$DEFAULT_UID}
      CURRENT_GID: ${CURRENT_GID:-$DEFAULT_GID}
    volumes:
      # Web root folder
      - ./web/wp-core:/srv/web
      # WordPress wp-content folder
      - ./web/wp-content:/srv/web/wp-content
      # Debug log
      - ./logs/wordpress:/var/log/wordpress
      # PHP ini config
      - ./config/php:/usr/local/etc/php
      # Share shell scripts
      - ./sh:/shell:ro

  nginx:
    image: "${APP_NGINX_IMAGE}"
    container_name: "${APP_NAME}-nginx"
    restart: unless-stopped
    depends_on:
      - mariadb
      - php
    working_dir: /srv/web
    env_file: .env
    ports:
      - "${APP_HTTP_PORT}:${APP_HTTP_PORT}"
      - "${APP_HTTPS_PORT}:${APP_HTTPS_PORT}"
    networks:
      default:
        # Add alias for nginx container to connect from other containers (node watcher for example)
        aliases:
          - "${APP_DOMAIN}"
    volumes:
      # Web root folder
      - ./web/wp-core:/srv/web
      # WordPress wp-content folder
      - ./web/wp-content:/srv/web/wp-content
      # Nginx config
      - ./config/nginx:/etc/nginx/templates:ro
      # SSL files
      - ./config/ssl:/etc/nginx/ssl:ro
      # Logs
      - ./logs/nginx:/var/log/nginx

  cron:
    image: "${APP_CRON_IMAGE}"
    container_name: "${APP_NAME}-cron"
    restart: unless-stopped
    depends_on:
      - mariadb
      - php
    env_file: .env
    environment:
      CURRENT_UID: ${CURRENT_UID:-$DEFAULT_UID}
      CURRENT_GID: ${CURRENT_GID:-$DEFAULT_GID}
      CURRENT_PATH: ${CURRENT_PATH:-$DEFAULT_PATH}
    working_dir: /app
    volumes:
      # Share docker socket to allow cron run scenarios inside other containers
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Share crontabs files into tmp folder
      - ./config/cron/crontabs:/tmp/crontabs
      # Share all app files
      - ./:/app

networks:
  project_network:
    driver: bridge
