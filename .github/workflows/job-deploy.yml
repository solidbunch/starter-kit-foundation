name: job-deploy

on:
  workflow_call:
    secrets:
      SSH_KEY:
        required: true
      SSH_CONFIG:
        required: true
      COMPOSER_AUTH:
        required: true
    inputs:
      SSH_HOST_ALIAS:
        required: true
        type: string
      DEPLOY_PATH_DESTINATION:
        required: true
        type: string
      DEPLOYMENT_NAME:
        required: true
        type: string
      ENVIRONMENT_TYPE:
        required: true
        type: string

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Prepare .env
        run: |
          bash ./sh/env/secret-gen.sh
          echo "COMPOSER_AUTH=${{ secrets.COMPOSER_AUTH }}" >> ./config/environment/.env.secret
          bash ./sh/env/init.sh ${{ inputs.ENVIRONMENT_TYPE }}

      - name: Build Cache - restore
        id: build-cache-restore
        uses: actions/cache/restore@v4
        with:
          path: |
            vendor
            web
          key: build-cache-${{ inputs.SSH_HOST_ALIAS }}-${{ runner.os }}-${{ hashFiles('composer.lock', 'composer.json', 'web/wp-config/**/*') }}

      - name: Install Composer and Node Dependencies
        if: steps.build-cache-restore.outputs.cache-hit != 'true'
        run: |
          export CURRENT_UID=$(id -u)
          export CURRENT_GID=$(id -g)
          bash ./sh/install.sh yes

      - name: Build Cache - save
        if: steps.build-cache-restore.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: |
            vendor
            web
          key: build-cache-${{ inputs.SSH_HOST_ALIAS }}-${{ runner.os }}-${{ hashFiles('composer.lock', 'composer.json', 'web/wp-config/**/*') }}

      - name: Save Built job
        uses: actions/cache/save@v4
        with:
          path: .
          key: build-job-${{ github.run_number }}

  deploy:
    runs-on: ubuntu-22.04

    needs: [ build ]

    steps:
      - name: Use Built job
        uses: actions/cache/restore@v4
        with:
          path: .
          key: build-job-${{ github.run_number }}

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh/
          echo '${{ secrets.SSH_KEY }}' > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa
          echo '${{ secrets.SSH_CONFIG }}' > ~/.ssh/config

      - name: Deploy via SSH
        run: |
          echo "Deploying to ${{ inputs.DEPLOY_PATH_DESTINATION }}"
          ssh ${{ inputs.SSH_HOST_ALIAS }} mkdir -p ${{ inputs.DEPLOY_PATH_DESTINATION }}
          rsync -og \
            --chmod=Dug=rwx,Fug=rw \
            --checksum \
            --recursive \
            --verbose \
            --compress \
            --links \
            --delete-after \
            --exclude ".git*" \
            --exclude "*/node_modules/" \
            --exclude "backups/" \
            --exclude "db-data/" \
            --exclude "logs/*" \
            --exclude "iac/" \
            --exclude ".env" \
            --exclude ".env.*override" \
            --exclude ".env.*secret" \
            --exclude "config/ssl/*/" \
            --exclude "web/wp-content/languages" \
            --exclude "web/wp-content/uploads" \
            --include "web/wp-content/cache" \
            ./ ${{ inputs.SSH_HOST_ALIAS }}:${{ inputs.DEPLOY_PATH_DESTINATION }}
          ssh ${{ inputs.SSH_HOST_ALIAS }} "
            set -e
            cd ${{ inputs.DEPLOY_PATH_DESTINATION }};
            make secret;
            bash ./sh/env/init.sh '${{ inputs.ENVIRONMENT_TYPE }}';
            make ssl;
            make down;
            make up '${{ inputs.ENVIRONMENT_TYPE }}';
            bash ./sh/database/check.sh;
            make core-install"

